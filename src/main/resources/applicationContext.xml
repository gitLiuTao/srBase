<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:jee="http://www.springframework.org/schema/jee" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd 
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd  
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd	
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">
	<description>Spring 基础配置</description>
	<!-- 自动扫描注解包 -->
	<context:component-scan base-package="com.sunrise">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 数据源 -->
<!-- 	<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/scjdauth" resource-ref="true" />
	<jee:jndi-lookup id="dataSourceDM" jndi-name="java:comp/env/jdbc/scjddm" resource-ref="true" />


	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="com.sunrise.system.domain"></property>
		<property name="mapperLocations" value="classpath:com/sunrise/system/persistence/**/*.xml"></property>
		<property name="configurationProperties">
			<util:properties>
				全局映射器启用缓存
				<prop key="cacheEnabled">true</prop>
				查询时，关闭关联对象即时加载以提高性能
				<prop key="lazyLoadingEnabled">false</prop>
				设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能
				<prop key="aggressiveLazyLoading">false</prop>
				对于未知的SQL查询，允许返回不同的结果集以达到通用的效果
				<prop key="multipleResultSetsEnabled">true</prop>
				允许使用列标签代替列名
				<prop key="useColumnLabel">true</prop>
				允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖
				<prop key="useGeneratedKeys">true</prop>
				给予被嵌套的resultMap以字段-属性的映射支持
				<prop key="autoMappingBehavior">FULL</prop>
				对于批量更新操作缓存SQL以提高性能
				<prop key="defaultExecutorType">BATCH</prop>
				数据库超过25000秒仍未响应则超时
				<prop key="defaultStatementTimeout">25000</prop>
			</util:properties>
		</property>
		<property name="plugins">
			<util:list>
				分页拦截器
				<bean class="com.sunrise.base.jdbc.plugin.PaginationJdbcInterceptor"></bean>
			</util:list>
		</property>
	</bean>

	<bean id="sqlSessionFactoryDM" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceDM"></property>
		<property name="typeAliasesPackage" value="com.sunrise.scjd.domain"></property>
		<property name="mapperLocations" value="classpath:com/sunrise/scjd/persistence/**/*.xml"></property>
		<property name="configurationProperties">
			<util:properties>
				全局映射器启用缓存
				<prop key="cacheEnabled">true</prop>
				查询时，关闭关联对象即时加载以提高性能
				<prop key="lazyLoadingEnabled">false</prop>
				设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指 定)，不会加载关联表的所有字段，以提高性能
				<prop key="aggressiveLazyLoading">false</prop>
				对于未知的SQL查询，允许返回不同的结果集以达到通用的效果
				<prop key="multipleResultSetsEnabled">true</prop>
				允许使用列标签代替列名
				<prop key="useColumnLabel">true</prop>
				允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖
				<prop key="useGeneratedKeys">true</prop>
				给予被嵌套的resultMap以字段-属性的映射支持
				<prop key="autoMappingBehavior">FULL</prop>
				对于批量更新操作缓存SQL以提高性能
				<prop key="defaultExecutorType">BATCH</prop>
				数据库超过25000秒仍未响应则超时
				<prop key="defaultStatementTimeout">25000</prop>
			</util:properties>
		</property>
		<property name="plugins">
			<util:list>
				分页拦截器
				<bean class="com.sunrise.base.jdbc.plugin.PaginationJdbcInterceptor"></bean>
			</util:list>
		</property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sunrise.system.persistence"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sunrise.scjd.persistence"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryDM"></property>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionManagerDM" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceDM" />
	</bean>

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<tx:advice id="transactionAdviceDM" transaction-manager="transactionManagerDM">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="load*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config proxy-target-class="true">
		<aop:advisor pointcut="execution(* com.sunrise.system.service..*.*(..))" advice-ref="transactionAdvice" />
		<aop:advisor pointcut="execution(* com.sunrise.scjd.service..*.*(..))" advice-ref="transactionAdviceDM" />
	</aop:config> -->

	<!-- ehcache -->
	<cache:annotation-driven cache-manager="ehCacheCacheManager" proxy-target-class="true" />
	<bean id="ehCacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:shared="true">
		<property name="configLocation" value="classpath:ehcache.xml" />
		<property name="cacheManagerName" value="globalEhCahceManager"></property>
	</bean>
	<bean id="ehCacheCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManagerFactory"></property>
	</bean>
</beans>