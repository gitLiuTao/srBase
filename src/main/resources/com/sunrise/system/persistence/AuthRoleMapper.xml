<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sunrise.system.persistence.AuthRoleMapper">
	<resultMap id="BaseResultMap" type="com.sunrise.system.domain.AuthRole">
		<id column="ROLE_ID" property="roleId" jdbcType="DECIMAL" />
		<result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
		<result column="ROLE_DESC" property="roleDesc" jdbcType="VARCHAR" />
		<result column="CREATOR" property="creator" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="IS_LOWER_USE" property="isLowerUse" jdbcType="INTEGER" />
		<result column="MY_STATUS" property="myStatus" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		ROLE_ID, ROLE_NAME, ROLE_DESC, CREATOR, CREATE_TIME, IS_LOWER_USE, MY_STATUS
	</sql>
	<select id="selectBySelective" resultMap="BaseResultMap" parameterType="com.sunrise.system.domain.AuthRole">
		SELECT
		<include refid="Base_Column_List"/>
		FROM AUTH_ROLE 
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.math.BigDecimal">
		select
		<include refid="Base_Column_List" />
		from AUTH_ROLE
		where ROLE_ID = #{roleId,jdbcType=DECIMAL}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.math.BigDecimal">
		delete from AUTH_ROLE
		where ROLE_ID = #{roleId,jdbcType=DECIMAL}
	</delete>
		<!--删除角色权限信息表-->
	<delete id="deleteByMenuKey" parameterType="java.math.BigDecimal">
		delete from AUTH_ROLE_MENU
		where ROLE_ID = #{roleId,jdbcType=DECIMAL}
	</delete>
	<!--删除角色用户信息表-->
	<delete id="deleteRoleUser" parameterType="java.util.HashMap">
		delete from AUTH_ROLE_USER
		where ROLE_ID = #{role_id,jdbcType=DECIMAL}
		and   USER_ID=#{login_id,jdbcType=DECIMAL}
	</delete>
	<insert id="insert" parameterType="com.sunrise.system.domain.AuthRole">
		insert into AUTH_ROLE (ROLE_ID, ROLE_NAME, ROLE_DESC,
		CREATOR, CREATE_TIME, IS_LOWER_USE,
		MY_STATUS)
		values (#{roleId,jdbcType=DECIMAL}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR},
		#{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{isLowerUse,jdbcType=INTEGER},
		#{myStatus,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.sunrise.system.domain.AuthRole">
		insert into AUTH_ROLE
		<trim prefix="(" suffix=")" suffixOverrides=",">
				ROLE_ID,
			<if test="roleName != null">
				ROLE_NAME,
			</if>
			<if test="roleDesc != null">
				ROLE_DESC,
			</if>
			<if test="creator != null">
				CREATOR,
			</if>
				CREATE_TIME,
			<if test="isLowerUse != null">
				IS_LOWER_USE,
			</if>
			<if test="myStatus != null">
				MY_STATUS,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
				SEQ_AUTH_ROLE.NEXTVAL,
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				#{roleDesc,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				#{creator,jdbcType=VARCHAR},
			</if>
				sysdate,			
			<if test="isLowerUse != null">
				#{isLowerUse,jdbcType=INTEGER},
			</if>
			<if test="myStatus != null">
				#{myStatus,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.sunrise.system.domain.AuthRole">
		update AUTH_ROLE
		<set>
			<if test="roleName != null">
				ROLE_NAME = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleDesc != null">
				ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				CREATOR = #{creator,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isLowerUse != null">
				IS_LOWER_USE = #{isLowerUse,jdbcType=INTEGER},
			</if>
			<if test="myStatus != null">
				MY_STATUS = #{myStatus,jdbcType=INTEGER},
			</if>
		</set>
		where ROLE_ID = #{roleId,jdbcType=DECIMAL}
	</update>
	   <!--通过groupId查询  -->
    	<select id="selectBygroupId" resultMap="BaseResultMap" parameterType="java.util.Map">
		 select 
    	ROLE_ID,ROLE_NAME,ROLE_DESC,CREATOR,CREATE_TIME,IS_LOWER_USE,MY_STATUS
    	FROM
    	auth_role
 		 where ROLE_ID in (
 	 			  select ROLE_ID
          		  from AUTH_GROUP_ROLE 
         		  where GROUP_ID =${groupsId}
           		  ) 
            
     
	</select>
	<update id="updateByPrimaryKey" parameterType="com.sunrise.system.domain.AuthRole">
		update AUTH_ROLE
		set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
		ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
		CREATOR = #{creator,jdbcType=VARCHAR},
		CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
		IS_LOWER_USE = #{isLowerUse,jdbcType=INTEGER},
		MY_STATUS = #{myStatus,jdbcType=INTEGER}
		where ROLE_ID = #{roleId,jdbcType=DECIMAL}
	</update>
	 <select id="selectUserRoleList" resultMap="BaseResultMap"  parameterType="java.util.Map">
     select 
     r.ROLE_ID, r.ROLE_NAME, r.ROLE_DESC, r.CREATOR, r.CREATE_TIME, r.IS_LOWER_USE, r.MY_STATUS
  	 from AUTH_ROLE r
 	 where exists (
 	 			  select 1
          		  from AUTH_ROLE_USER t
         		  where r.role_id = t.role_id
           		  and t.user_id = #{userId}
           ) 
        <if test="roleName != null and roleName !=''">
         	and ROLE_NAME like '%${roleName}%'
        </if>
           order by r.ROLE_NAME
  </select>
  	 <select id="selectRoleUserList" resultType="java.util.HashMap" parameterType="String" >
     select LOGIN_ID,USER_NAME,MOBILE from auth_user where login_id in(select 
     user_id
  	 from auth_role_user r
 	 where r.role_id=#{role_id})
  </select>
  
  <!-- 查询角色 -->
  <select id="queryAllRoles" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  	select ROLE_ID,
	       ROLE_NAME,
	       ROLE_DESC,
	       CREATOR,
	       to_char(create_time, 'yyyy-mm-dd') as CREATE_TIME,
	       IS_LOWER_USE,
	       MY_STATUS
	  from auth_role a
	  <where>
	  	<if test="roleId !=null and roleId != '' ">
			and a.role_id = #{roleId}  	
	  	</if>
	  	<if test="roleName !=null and roleName != '' ">
			and a.role_name like '%${roleName}%'  	
	  	</if>
	  </where>
  
  </select>
  
  <insert id="insertRoleUser" parameterType="java.util.HashMap">
		insert into auth_role_user
				(SEQ_ID,
				ROLE_ID,
				USER_ID,
				CREATOR,
				CREATE_TIME)
				VALUES(
				SEQ_AUTH_ROLE_USER.NEXTVAL,
				#{ROLE_ID},
				#{USER_ID},
				#{CREATOR},
				sysdate)		
	</insert>
    
</mapper>